/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/components/progressbar/progressbar.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './progress.directive.ngfactory';
import * as import11 from './bar.component.ngfactory';
import * as import12 from 'ng2-bootstrap/components/progressbar/bar.component';
import * as import13 from 'ng2-bootstrap/components/progressbar/progress.directive';
export class Wrapper_ProgressbarComponent {
  context:import0.ProgressbarComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor() {
    this.changed = false;
    this.context = new import0.ProgressbarComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  check_animate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.animate = currValue;
      this._expr_0 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.max = currValue;
      this._expr_1 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.type = currValue;
      this._expr_2 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this.changed = true;
      this.context.value = currValue;
      this._expr_3 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_ProgressbarComponent_Host:import4.RenderComponentType = (null as any);
class _View_ProgressbarComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _ProgressbarComponent_0_4:Wrapper_ProgressbarComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_ProgressbarComponent_Host0,renderType_ProgressbarComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'progressbar',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ProgressbarComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ProgressbarComponent_0_4 = new Wrapper_ProgressbarComponent();
    this._appEl_0.initComponent(this._ProgressbarComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._ProgressbarComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ProgressbarComponent) && (0 === requestNodeIndex))) { return this._ProgressbarComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ProgressbarComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._ProgressbarComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_ProgressbarComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_ProgressbarComponent_Host === (null as any))) { (renderType_ProgressbarComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_ProgressbarComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const ProgressbarComponentNgFactory:import9.ComponentFactory<import0.ProgressbarComponent> = new import9.ComponentFactory<import0.ProgressbarComponent>('progressbar',viewFactory_ProgressbarComponent_Host0,import0.ProgressbarComponent);
const styles_ProgressbarComponent:any[] = ([] as any[]);
var renderType_ProgressbarComponent:import4.RenderComponentType = (null as any);
class _View_ProgressbarComponent0 extends import3.AppView<import0.ProgressbarComponent> {
  _text_0:any;
  _el_1:any;
  _ProgressDirective_1_3:import10.Wrapper_ProgressDirective;
  _text_2:any;
  _el_3:any;
  /*private*/ _appEl_3:import5.AppElement;
  _BarComponent_3_4:import11.Wrapper_BarComponent;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_ProgressbarComponent0,renderType_ProgressbarComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import2.createRenderElement(this.renderer,parentRenderNode,'div',new import2.InlineArray2(2,'progress',''),(null as any));
    this._ProgressDirective_1_3 = new import10.Wrapper_ProgressDirective();
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import2.createRenderElement(this.renderer,this._el_1,'bar',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._appEl_3 = new import5.AppElement(3,1,this,this._el_3);
    var compView_3:any = import11.viewFactory_BarComponent0(this.viewUtils,this.injector(3),this._appEl_3);
    this._BarComponent_3_4 = new import11.Wrapper_BarComponent(this._ProgressDirective_1_3.context);
    this._appEl_3.initComponent(this._BarComponent_3_4.context,([] as any[]),compView_3);
    this._text_4 = this.renderer.createText((null as any),'\n          ',(null as any));
    this._text_5 = this.renderer.createText((null as any),'\n      ',(null as any));
    compView_3.create(this._BarComponent_3_4.context,[([] as any[]).concat([this._text_4]).concat(this.projectableNodes[0]).concat([this._text_5])],(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._text_7
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.BarComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._BarComponent_3_4.context; }
    if (((token === import13.ProgressDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._ProgressDirective_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.animate;
    this._ProgressDirective_1_3.check_animate(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this.context.max;
    this._ProgressDirective_1_3.check_max(currVal_1_0_1,throwOnChange,false);
    this._ProgressDirective_1_3.detectChangesInInputProps(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.type;
    this._BarComponent_3_4.check_type(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = this.context.value;
    this._BarComponent_3_4.check_value(currVal_3_0_1,throwOnChange,false);
    this._BarComponent_3_4.detectChangesInInputProps(this,this._el_3,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._ProgressDirective_1_3.detectChangesInHostProps(this,this._el_1,throwOnChange);
    this._BarComponent_3_4.detectChangesInHostProps(this,this._el_3,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._BarComponent_3_4.context.ngOnDestroy();
  }
}
export function viewFactory_ProgressbarComponent0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.ProgressbarComponent> {
  if ((renderType_ProgressbarComponent === (null as any))) { (renderType_ProgressbarComponent = viewUtils.createRenderComponentType('',1,import8.ViewEncapsulation.None,styles_ProgressbarComponent,{})); }
  return new _View_ProgressbarComponent0(viewUtils,parentInjector,declarationEl);
}