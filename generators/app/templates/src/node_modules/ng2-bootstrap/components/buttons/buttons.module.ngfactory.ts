/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'ng2-bootstrap/components/buttons/buttons.module';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import5 from '@angular/core/src/di/injector';
class ButtonsModuleInjector extends import0.NgModuleInjector<import1.ButtonsModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import3.FormsModule;
  _ButtonsModule_2:import1.ButtonsModule;
  __RadioControlRegistry_3:import4.RadioControlRegistry;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _RadioControlRegistry_3():import4.RadioControlRegistry {
    if ((this.__RadioControlRegistry_3 == (null as any))) { (this.__RadioControlRegistry_3 = new import4.RadioControlRegistry()); }
    return this.__RadioControlRegistry_3;
  }
  createInternal():import1.ButtonsModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import3.FormsModule();
    this._ButtonsModule_2 = new import1.ButtonsModule();
    return this._ButtonsModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.FormsModule)) { return this._FormsModule_1; }
    if ((token === import1.ButtonsModule)) { return this._ButtonsModule_2; }
    if ((token === import4.RadioControlRegistry)) { return this._RadioControlRegistry_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ButtonsModuleNgFactory:import0.NgModuleFactory<import1.ButtonsModule> = new import0.NgModuleFactory(ButtonsModuleInjector,import1.ButtonsModule);