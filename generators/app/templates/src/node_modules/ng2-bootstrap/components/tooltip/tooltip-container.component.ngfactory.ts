/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/components/tooltip/tooltip-container.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from 'ng2-bootstrap/components/tooltip/tooltip-options.class';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import13 from '../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import14 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from '@angular/common/src/directives/ng_class';
import * as import20 from '@angular/common/src/directives/ng_style';
import * as import21 from '@angular/core/src/security';
import * as import22 from '../../../@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import23 from '@angular/common/src/directives/ng_template_outlet';
export class Wrapper_TooltipContainerComponent {
  context:import0.TooltipContainerComponent;
  changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this.context = new import0.TooltipContainerComponent(p0,p1,p2);
  }
  detectChangesInInputProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_TooltipContainerComponent_Host:import2.RenderComponentType = (null as any);
class _View_TooltipContainerComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _TooltipContainerComponent_0_4:Wrapper_TooltipContainerComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent_Host0,renderType_TooltipContainerComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'tooltip-container',import4.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TooltipContainerComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TooltipContainerComponent_0_4 = new Wrapper_TooltipContainerComponent(new import8.ElementRef(this._el_0),compView_0.ref,this.parentInjector.get(import9.TooltipOptions));
    this._appEl_0.initComponent(this._TooltipContainerComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._TooltipContainerComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TooltipContainerComponent) && (0 === requestNodeIndex))) { return this._TooltipContainerComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TooltipContainerComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._TooltipContainerComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TooltipContainerComponent_0_4.context.ngAfterViewInit(); } }
  }
}
function viewFactory_TooltipContainerComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_TooltipContainerComponent_Host === (null as any))) { (renderType_TooltipContainerComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_TooltipContainerComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TooltipContainerComponentNgFactory:import11.ComponentFactory<import0.TooltipContainerComponent> = new import11.ComponentFactory<import0.TooltipContainerComponent>('tooltip-container',viewFactory_TooltipContainerComponent_Host0,import0.TooltipContainerComponent);
const styles_TooltipContainerComponent:any[] = ([] as any[]);
var renderType_TooltipContainerComponent:import2.RenderComponentType = (null as any);
class _View_TooltipContainerComponent0 extends import1.AppView<import0.TooltipContainerComponent> {
  _el_0:any;
  _NgClass_0_3:import12.Wrapper_NgClass;
  _NgStyle_0_4:import13.Wrapper_NgStyle;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _appEl_4:import3.AppElement;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import14.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _appEl_6:import3.AppElement;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import14.Wrapper_NgIf;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _appEl_8:import3.AppElement;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import14.Wrapper_NgIf;
  _text_9:any;
  _map_21:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent0,renderType_TooltipContainerComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._map_21 = import4.pureProxy3((p0:any,p1:any,p2:any):{[key: string]:any} => {
      return {
        top: p0,
        left: p1,
        display: p2
      }
      ;
    });
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray4(4,'class','tooltip','role','tooltip'),(null as any));
    this._NgClass_0_3 = new import12.Wrapper_NgClass(this.parentInjector.get(import15.IterableDiffers),this.parentInjector.get(import16.KeyValueDiffers),new import8.ElementRef(this._el_0),this.renderer);
    this._NgStyle_0_4 = new import13.Wrapper_NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import8.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._el_2 = import4.createRenderElement(this.renderer,this._el_0,'div',new import4.InlineArray2(2,'class','tooltip-arrow'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_4 = new import3.AppElement(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import17.TemplateRef_(this._appEl_4,viewFactory_TooltipContainerComponent1);
    this._NgIf_4_6 = new import14.Wrapper_NgIf(this._appEl_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_6 = new import3.AppElement(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import17.TemplateRef_(this._appEl_6,viewFactory_TooltipContainerComponent2);
    this._NgIf_6_6 = new import14.Wrapper_NgIf(this._appEl_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_8 = new import3.AppElement(8,0,this,this._anchor_8);
    this._TemplateRef_8_5 = new import17.TemplateRef_(this._appEl_8,viewFactory_TooltipContainerComponent4);
    this._NgIf_8_6 = new import14.Wrapper_NgIf(this._appEl_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._anchor_8,
      this._text_9
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import18.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import17.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import18.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import17.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import18.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import19.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._NgClass_0_3.context; }
    if (((token === import20.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._NgStyle_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'tooltip';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.context.classMap;
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.detectChangesInInputProps(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this._map_21(this.context.top,this.context.left,this.context.display);
    this._NgStyle_0_4.check_ngStyle(currVal_0_1_0,throwOnChange,false);
    this._NgStyle_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    const currVal_4_0_0:any = (this.context.htmlContent && !this.context.isTemplate);
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.detectChangesInInputProps(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = (this.context.htmlContent && this.context.isTemplate);
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.detectChangesInInputProps(this,this._anchor_6,throwOnChange);
    const currVal_8_0_0:any = this.context.content;
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.detectChangesInInputProps(this,this._anchor_8,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgClass_0_3.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this._NgStyle_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_TooltipContainerComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.TooltipContainerComponent> {
  if ((renderType_TooltipContainerComponent === (null as any))) { (renderType_TooltipContainerComponent = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_TooltipContainerComponent,{})); }
  return new _View_TooltipContainerComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_TooltipContainerComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent1,renderType_TooltipContainerComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_2 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'div',new import4.InlineArray2(2,'class','tooltip-inner'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_2:any = import4.interpolate(1,'',this.parent.context.htmlContent,'');
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import21.SecurityContext.HTML,currVal_2));
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TooltipContainerComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  return new _View_TooltipContainerComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_TooltipContainerComponent2 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import3.AppElement;
  _TemplateRef_2_5:any;
  _NgTemplateOutlet_2_6:import22.Wrapper_NgTemplateOutlet;
  _text_3:any;
  _map_7:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent2,renderType_TooltipContainerComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._map_7 = import4.pureProxy1((p0:any):{[key: string]:any} => {
      return {model: p0};
    });
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'div',new import4.InlineArray2(2,'class','tooltip-inner'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import3.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import17.TemplateRef_(this._appEl_2,viewFactory_TooltipContainerComponent3);
    this._NgTemplateOutlet_2_6 = new import22.Wrapper_NgTemplateOutlet(this._appEl_2.vcRef);
    this._text_3 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import23.NgTemplateOutlet) && (2 === requestNodeIndex))) { return this._NgTemplateOutlet_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this._map_7(this.parent.context.context);
    this._NgTemplateOutlet_2_6.check_ngOutletContext(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parent.context.htmlContent;
    this._NgTemplateOutlet_2_6.check_ngTemplateOutlet(currVal_2_0_1,throwOnChange,false);
    this._NgTemplateOutlet_2_6.detectChangesInInputProps(this,this._anchor_2,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TooltipContainerComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  return new _View_TooltipContainerComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_TooltipContainerComponent3 extends import1.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent3,renderType_TooltipContainerComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._text_0 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.init(([] as any[]).concat([this._text_0]),[this._text_0],([] as any[]),([] as any[]));
    return (null as any);
  }
}
function viewFactory_TooltipContainerComponent3(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  return new _View_TooltipContainerComponent3(viewUtils,parentInjector,declarationEl);
}
class _View_TooltipContainerComponent4 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_TooltipContainerComponent4,renderType_TooltipContainerComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_2 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'div',new import4.InlineArray2(2,'class','tooltip-inner'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_2:any = import4.interpolate(1,'\n        ',this.parent.context.content,'\n      ');
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TooltipContainerComponent4(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  return new _View_TooltipContainerComponent4(viewUtils,parentInjector,declarationEl);
}