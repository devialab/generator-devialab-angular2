/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ng2-bootstrap/components/tabs/tabset.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import11 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import13 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/common/src/directives/ng_for';
import * as import17 from '@angular/common/src/directives/ng_class';
import * as import18 from '../common.ngfactory';
import * as import19 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import20 from 'ng2-bootstrap/components/common';
import * as import21 from '@angular/common/src/directives/ng_if';
export class Wrapper_TabsetComponent {
  context:import0.TabsetComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor() {
    this.changed = false;
    this.context = new import0.TabsetComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  check_vertical(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.vertical = currValue;
      this._expr_0 = currValue;
    }
  }
  check_justified(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.justified = currValue;
      this._expr_1 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.type = currValue;
      this._expr_2 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = this.context.clazz;
    if (import2.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementClass(el,'tab-container',currVal_3);
      this._expr_3 = currVal_3;
    }
  }
}
var renderType_TabsetComponent_Host:import4.RenderComponentType = (null as any);
class _View_TabsetComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _TabsetComponent_0_4:Wrapper_TabsetComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TabsetComponent_Host0,renderType_TabsetComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'tabset',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TabsetComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TabsetComponent_0_4 = new Wrapper_TabsetComponent();
    this._appEl_0.initComponent(this._TabsetComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._TabsetComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TabsetComponent) && (0 === requestNodeIndex))) { return this._TabsetComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TabsetComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._TabsetComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._TabsetComponent_0_4.context.ngOnDestroy();
  }
}
function viewFactory_TabsetComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_TabsetComponent_Host === (null as any))) { (renderType_TabsetComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_TabsetComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TabsetComponentNgFactory:import9.ComponentFactory<import0.TabsetComponent> = new import9.ComponentFactory<import0.TabsetComponent>('tabset',viewFactory_TabsetComponent_Host0,import0.TabsetComponent);
const styles_TabsetComponent:any[] = ([] as any[]);
var renderType_TabsetComponent:import4.RenderComponentType = (null as any);
class _View_TabsetComponent0 extends import3.AppView<import0.TabsetComponent> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import10.Wrapper_NgClass;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import5.AppElement;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import11.Wrapper_NgFor;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TabsetComponent0,renderType_TabsetComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import2.createRenderElement(this.renderer,parentRenderNode,'ul',new import2.InlineArray2(2,'class','nav'),(null as any));
    this._NgClass_1_3 = new import10.Wrapper_NgClass(this.parentInjector.get(import12.IterableDiffers),this.parentInjector.get(import13.KeyValueDiffers),new import14.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import5.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import15.TemplateRef_(this._appEl_3,viewFactory_TabsetComponent1);
    this._NgFor_3_6 = new import11.Wrapper_NgFor(this._appEl_3.vcRef,this._TemplateRef_3_5,this.parentInjector.get(import12.IterableDiffers),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_6 = import2.createRenderElement(this.renderer,parentRenderNode,'div',new import2.InlineArray2(2,'class','tab-content'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this.renderer.projectNodes(this._el_6,import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_8 = this.renderer.createText(this._el_6,'\n    ',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import16.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    if (((token === import17.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgClass_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'nav';
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this.context.classMap;
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.detectChangesInInputProps(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.tabs;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.detectChangesInInputProps(this,this._anchor_3,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgClass_1_3.detectChangesInHostProps(this,this._el_1,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_1_0:any = ((<any>$event.preventDefault()) !== false);
    return (true && pd_1_0);
  }
}
export function viewFactory_TabsetComponent0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.TabsetComponent> {
  if ((renderType_TabsetComponent === (null as any))) { (renderType_TabsetComponent = viewUtils.createRenderComponentType('',1,import8.ViewEncapsulation.None,styles_TabsetComponent,{})); }
  return new _View_TabsetComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_TabsetComponent1 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  /*private*/ _appEl_4:import5.AppElement;
  _NgTranscludeDirective_4_5:import18.Wrapper_NgTranscludeDirective;
  _text_5:any;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _appEl_7:import5.AppElement;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import19.Wrapper_NgIf;
  _text_8:any;
  _text_9:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TabsetComponent1,renderType_TabsetComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_15 = import1.UNINITIALIZED;
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'li',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n          ',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'a',new import2.InlineArray4(4,'class','nav-link','href','javascript:void(0);'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n            ',(null as any));
    this._el_4 = import2.createRenderElement(this.renderer,this._el_2,'span',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._appEl_4 = new import5.AppElement(4,2,this,this._el_4);
    this._NgTranscludeDirective_4_5 = new import18.Wrapper_NgTranscludeDirective(this._appEl_4.vcRef);
    this._text_5 = this.renderer.createText(this._el_4,'',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n            ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_7 = new import5.AppElement(7,2,this,this._anchor_7);
    this._TemplateRef_7_5 = new import15.TemplateRef_(this._appEl_7,viewFactory_TabsetComponent2);
    this._NgIf_7_6 = new import19.Wrapper_NgIf(this._appEl_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText(this._el_2,'\n          ',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_2,'click',this.eventHandler(this._handle_click_2_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgTranscludeDirective) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._NgTranscludeDirective_4_5.context; }
    if (((token === import15.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import21.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4_0_0:any = this.context.$implicit.headingRef;
    this._NgTranscludeDirective_4_5.check_ngTransclude(currVal_4_0_0,throwOnChange,false);
    this._NgTranscludeDirective_4_5.detectChangesInInputProps(this,this._el_4,throwOnChange);
    const currVal_7_0_0:any = this.context.$implicit.removable;
    this._NgIf_7_6.check_ngIf(currVal_7_0_0,throwOnChange,false);
    this._NgIf_7_6.detectChangesInInputProps(this,this._anchor_7,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_15:any = import2.interpolate(1,'nav-item ',this.context.$implicit.customClass,'');
    if (import2.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_15);
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = this.context.$implicit.active;
    if (import2.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_0,'active',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.context.$implicit.disabled;
    if (import2.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_0,'disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.context.$implicit.active;
    if (import2.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementClass(this._el_2,'active',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = this.context.$implicit.disabled;
    if (import2.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_2,'disabled',currVal_19);
      this._expr_19 = currVal_19;
    }
    this._NgTranscludeDirective_4_5.detectChangesInHostProps(this,this._el_4,throwOnChange);
    const currVal_20:any = import2.interpolate(1,'',this.context.$implicit.heading,'');
    if (import2.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setText(this._text_5,currVal_20);
      this._expr_20 = currVal_20;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_2_0:any = ((<any>(this.context.$implicit.active = true)) !== false);
    return (true && pd_2_0);
  }
}
function viewFactory_TabsetComponent1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TabsetComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_TabsetComponent2 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_TabsetComponent2,renderType_TabsetComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'span',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n              ',(null as any));
    this._el_2 = import2.createRenderElement(this.renderer,this._el_0,'span',new import2.InlineArray2(2,'class','glyphicon glyphicon-remove-circle'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_2,'click',this.eventHandler(this._handle_click_2_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  private _handle_click_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    $event.preventDefault();
    const pd_2_0:any = ((<any>this.parent.parent.context.removeTab(this.parent.context.$implicit)) !== false);
    return (true && pd_2_0);
  }
}
function viewFactory_TabsetComponent2(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_TabsetComponent2(viewUtils,parentInjector,declarationEl);
}